

{
  "itemIdentifier": "ogc.sosa",
  "name": "Sensor, Observation, Sample, and Actuator (SOSA)",
  "abstract": "The SOSA (Sensor, Observation, Sample, and Actuator) ontology  is a realisation of the Observations, Measurements and Sampling (OMS) Conceptual model",
  "status": "under-development",
  "dateTimeAddition": "2023-04-13T00:00:00Z",
  "itemClass": "api",
  "register": "ogc-building-block-register",
  "version": "1.0",
  "dateOfLastChange": "2025-03-13",
  "sources": [
    {
      "title": "Semantic Sensor Network Ontology",
      "link": "https://www.w3.org/TR/vocab-ssn/"
    }
  ],
  "maturity": "development",
  "scope": "development",
  "tags": [
    "sosa",
    "ssn",
    "o&m",
    "o&m&s"
  ],
  "superBBlock": true,
  "group": "SOSA",
  "shaclRules": {},
  "sourceFiles": "https://opengeospatial.github.io/ogcapi-sosa/_sources/",
  "rdfData": [],
  "validationPassed": true,
  "description": "Building Blocks for implementing the core classes of the [Observations and Measurements model]\n\nEach class is implemented using a schema is tied to the equivalent semantic description using the SOSA (Sensor, Observation, Sample, and Actuator) ontology.\n\nAn [aggregate schema](schema.yaml) is provided allowing any of these elements to be combined in a single payload, or each class may be used independently using the relevant schema.\n\nTBD: Convenience API paths may be defined to support traversal of relationships - such as inverse relationships `hasResult`/`isResultOf` , `hasSample`/`isSampleOf` etc. where only one property is present in the data and the inverse is not otherwise accessible.\n",
  "annotatedSchema": null,
  "gitRepository": "https://github.com/opengeospatial/ogcapi-sosa",
  "gitPath": "_sources"
}