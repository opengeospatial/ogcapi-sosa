Validation report for ogc.sosa.features.observationCollection - SOSA ObservationCollection Feature
Generated 2025-03-21T16:10:22.616221+00:00
=== Files ===
Using example_1_1.json from examples
JSON-LD context is present - uplifting
Output JSON-LD example_1_1.jsonld created
Output Turtle example_1_1.ttl created
=== End Files ===

=== JSON Schema ===
Validation passed
=== End JSON Schema ===

=== SHACL ===

** Validation error **
Validation result for _sources/properties/observation/rules.shacl:
  Validation Report
  Conforms: False
  Results (3):
  Constraint Violation in SPARQLConstraintComponent (http://www.w3.org/ns/shacl#SPARQLConstraintComponent):
  	Severity: sh:Violation
  	Source Shape: <https://www.ogc.org/rules/sosa/#testObservedProperty>
  	Focus Node: <http://www.example.com/sosa/c1>
  	Value Node: Literal("")
  	Result Path: sosa:observedProperty
  	Source Constraint: [ sh:message Literal("Exactly 1 of sosa:observedProperty is required") ; sh:select Literal("
              PREFIX sh: <http://www.w3.org/ns/shacl#>
              PREFIX sosa: <http://www.w3.org/ns/sosa/>
              PREFIX geojson: <https://purl.org/geojson/vocab#>
              SELECT $this (sosa:observedProperty as ?path) (GROUP_CONCAT(?prop; separator=';') AS ?value) WHERE {
                  OPTIONAL { $this sosa:observedProperty ?prop }
                  OPTIONAL { ?collection sosa:hasMember+|geojson:features+ $this ; sosa:observedProperty ?prop }
              }
              GROUP BY ?prop
              HAVING (count(?prop) != 1)
          ") ]
  	Message: Exactly 1 of sosa:observedProperty is required
  Constraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):
  	Severity: sh:Violation
  	Source Shape: [ sh:maxCount Literal("1", datatype=xsd:integer) ; sh:message Literal("Exactly one of sosa:hasResult or sosa:hasSimpleResult is required per observation") ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:path [ sh:alternativePath ( sosa:hasResult sosa:hasSimpleResult ) ] ]
  	Focus Node: <http://www.example.com/sosa/c1>
  	Result Path: [ sh:alternativePath ( sosa:hasResult sosa:hasSimpleResult ) ]
  	Message: Exactly one of sosa:hasResult or sosa:hasSimpleResult is required per observation
  Constraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):
  	Severity: sh:Violation
  	Source Shape: [ sh:maxCount Literal("1", datatype=xsd:integer) ; sh:message Literal("Exactly one feature of interest (sosa:hasFeatureOfInterest/sosa:isFeatureOfInterestOf) is required") ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:path ( [ sh:zeroOrMorePath [ sh:oneOrMorePath <http://recursion.too.deep> ] ] [ sh:alternativePath ( sosa:hasFeatureOfInterest <http://recursion.too.deep> ) ] ) ]
  	Focus Node: <http://www.example.com/sosa/c1>
  	Result Path: ( [ sh:zeroOrMorePath [ sh:oneOrMorePath <http://recursion.too.deep> ] ] [ sh:alternativePath ( sosa:hasFeatureOfInterest <http://recursion.too.deep> ) ] )
  	Message: Exactly one feature of interest (sosa:hasFeatureOfInterest/sosa:isFeatureOfInterestOf) is required
  
Focus nodes for _sources/properties/observation/rules.shacl:
 - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: <http://www.example.com/sosa/c1>,<http://www.example.com/sosa/pop1999>,<http://www.example.com/sosa/something>
 - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: <http://www.example.com/sosa/c1>,<http://www.example.com/sosa/pop1999>,<http://www.example.com/sosa/something>
 - Shape <https://www.ogc.org/rules/sosa/#testResult>: <http://www.example.com/sosa/c1>,<http://www.example.com/sosa/pop1999>,<http://www.example.com/sosa/something>
 - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: <http://www.example.com/sosa/c1>,<http://www.example.com/sosa/pop1999>,<http://www.example.com/sosa/something>
 - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: <http://www.example.com/sosa/pop1999>/sosa:hasSimpleResult
 - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*

=== End SHACL ===

=== Semantic Uplift ===
Running post-uplift shacl transform step from ../observation/semantic-uplift/featureType.shacl
=== End Semantic Uplift ===

