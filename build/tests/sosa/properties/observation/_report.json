{
  "title": "Validation report for ogc.sosa.properties.observation - Observation Properties",
  "bblockName": "Observation Properties",
  "bblockId": "ogc.sosa.properties.observation",
  "generated": "2025-06-04T08:02:58.232361+00:00",
  "result": false,
  "items": [
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/properties/observation/tests/collection-different-rq-fail.ttl",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/tests/collection-different-rq-fail.ttl",
        "language": "ttl"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using collection-different-rq-fail.ttl from test resources"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix sosa: <http://www.w3.org/ns/sosa/> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms false ;\n    sh:result [ a sh:ValidationResult ;\n            sh:focusNode <https://example.org/data/ts159c> ;\n            sh:resultMessage \"Collection member values do not match those of the collections (http://www.w3.org/ns/sosa/resultQuality property in https://example.org/data/t3: https://example.org/data/lowQuality != https://example.org/data/highQuality)\" ;\n            sh:resultPath sosa:resultQuality ;\n            sh:resultSeverity sh:Violation ;\n            sh:sourceConstraint [ sh:select \"\"\"\n        PREFIX sosa: <http://www.w3.org/ns/sosa/>\n        PREFIX geojson: <https://purl.org/geojson/vocab#>\n        PREFIX time: <http://www.w3.org/2006/time#>\n        SELECT $this ?path (?member AS ?value) ?failedValue WHERE {\n            $this (sosa:hasMember|^sosa:memberOf)+ ?member ;\n                ?path ?collectionValue .\n            ?member ?path ?memberValue .\n            FILTER(?path in ( sosa:resultTime, sosa:phenomenonTime, sosa:hasResult, sosa:hasSimpleResult,\n                sosa:hasFeatureOfInterest, sosa:hasUltimateFeatureOfInterest, sosa:observedProperty, sosa:madeBySystem,\n                sosa:usedProcedure, sosa:madeBySensor, sosa:madeBySampler, sosa:isSampleOf, sosa:madeByActuator,\n                sosa:actsOn, sosa:actsOnProperty, sosa:hasInputValue, sosa:observationRelatedTo,\n                sosa:relatedObservation, sosa:resultQuality, sosa:isOriginalSampleOf, sosa:isResultOfMadeBySampler,\n                sosa:isResultOfUsedProcedure ))\n            FILTER((isLiteral(?collectionValue) || isIRI(?collectionValue)) && ?collectionValue != ?memberValue)\n            FILTER NOT EXISTS { ?collectionValue a time:Interval }\n            BIND(CONCAT(STR(?memberValue), \" != \", STR(?collectionValue)) as ?failedValue)\n        }\n    \"\"\" ] ;\n            sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;\n            sh:sourceShape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues> ;\n            sh:value <https://example.org/data/t3> ] .\n\n",
              "isError": true,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: False\n  Results (1):\n  Constraint Violation in SPARQLConstraintComponent (http://www.w3.org/ns/shacl#SPARQLConstraintComponent):\n  \tSeverity: sh:Violation\n  \tSource Shape: <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>\n  \tFocus Node: ex:ts159c\n  \tValue Node: ex:t3\n  \tResult Path: sosa:resultQuality\n  \tSource Constraint: [ sh:select Literal(\"\n          PREFIX sosa: <http://www.w3.org/ns/sosa/>\n          PREFIX geojson: <https://purl.org/geojson/vocab#>\n          PREFIX time: <http://www.w3.org/2006/time#>\n          SELECT $this ?path (?member AS ?value) ?failedValue WHERE {\n              $this (sosa:hasMember|^sosa:memberOf)+ ?member ;\n                  ?path ?collectionValue .\n              ?member ?path ?memberValue .\n              FILTER(?path in ( sosa:resultTime, sosa:phenomenonTime, sosa:hasResult, sosa:hasSimpleResult,\n                  sosa:hasFeatureOfInterest, sosa:hasUltimateFeatureOfInterest, sosa:observedProperty, sosa:madeBySystem,\n                  sosa:usedProcedure, sosa:madeBySensor, sosa:madeBySampler, sosa:isSampleOf, sosa:madeByActuator,\n                  sosa:actsOn, sosa:actsOnProperty, sosa:hasInputValue, sosa:observationRelatedTo,\n                  sosa:relatedObservation, sosa:resultQuality, sosa:isOriginalSampleOf, sosa:isResultOfMadeBySampler,\n                  sosa:isResultOfUsedProcedure ))\n              FILTER((isLiteral(?collectionValue) || isIRI(?collectionValue)) && ?collectionValue != ?memberValue)\n              FILTER NOT EXISTS { ?collectionValue a time:Interval }\n              BIND(CONCAT(STR(?memberValue), \" != \", STR(?collectionValue)) as ?failedValue)\n          }\n      \") ]\n  \tMessage: Collection member values do not match those of the collections (http://www.w3.org/ns/sosa/resultQuality property in https://example.org/data/t3: https://example.org/data/lowQuality != https://example.org/data/highQuality)\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    "ex:t2/sosa:hasSimpleResult",
                    "ex:t3/sosa:hasSimpleResult",
                    "ex:t1/sosa:hasSimpleResult"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": [
                    "ex:ts159c"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": [
                    "ex:ts159c"
                  ]
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: ex:t2/sosa:hasSimpleResult,ex:t3/sosa:hasSimpleResult,ex:t1/sosa:hasSimpleResult\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: ex:ts159c\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: ex:ts159c\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/properties/observation/tests/collection-time-after-end-fail.ttl",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/tests/collection-time-after-end-fail.ttl",
        "language": "ttl"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using collection-time-after-end-fail.ttl from test resources"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix sosa: <http://www.w3.org/ns/sosa/> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms false ;\n    sh:result [ a sh:ValidationResult ;\n            sh:focusNode <https://example.org/data/ts159c> ;\n            sh:resultMessage \"Collection member values do not match those of the collections (http://www.w3.org/ns/sosa/phenomenonTime property in https://example.org/data/t1: 2017-04-16T20:00:00+00:00 > 2017-04-15T20:03:00+00:00)\" ;\n            sh:resultPath sosa:phenomenonTime ;\n            sh:resultSeverity sh:Violation ;\n            sh:sourceConstraint [ sh:select \"\"\"\n        PREFIX sosa: <http://www.w3.org/ns/sosa/>\n        PREFIX geojson: <https://purl.org/geojson/vocab#>\n        PREFIX time: <http://www.w3.org/2006/time#>\n        SELECT $this ?path (?member AS ?value) ?failedValue WHERE {\n            $this (sosa:hasMember|^sosa:memberOf)+ ?member ;\n                ?path ?collectionValue .\n            ?collectionValue a time:Interval .\n            ?member ?path ?memberValue .\n            FILTER(?path in ( sosa:resultTime, sosa:phenomenonTime, sosa:hasResult, sosa:hasSimpleResult,\n                sosa:hasFeatureOfInterest, sosa:hasUltimateFeatureOfInterest, sosa:observedProperty, sosa:madeBySystem,\n                sosa:usedProcedure, sosa:madeBySensor, sosa:madeBySampler, sosa:isSampleOf, sosa:madeByActuator,\n                sosa:actsOn, sosa:actsOnProperty, sosa:hasInputValue, sosa:observationRelatedTo,\n                sosa:relatedObservation, sosa:resultQuality, sosa:isOriginalSampleOf, sosa:isResultOfMadeBySampler,\n                sosa:isResultOfUsedProcedure ))\n\n            {\n                ?collectionValue time:hasBeginning/(time:inXSDDateTime|time:inXSDDate) ?colBeginning .\n                OPTIONAL { ?memberValue time:hasBeginning?/(time:inXSDDateTime|time:inXSDDate) ?memberBeginning }\n                FILTER((isLiteral(?memberValue) && ?memberValue < ?colBeginning) || (BOUND(?memberBeginning) && ?memberBeginning < ?colBeginning))\n                BIND(CONCAT(STR(COALESCE(?memberBeginning, ?memberValue)), \" < \", STR(?colBeginning)) as ?failedValue)\n            } UNION {\n                ?collectionValue time:hasEnd?/(time:inXSDDateTime|time:inXSDDate) ?colEnd .\n                OPTIONAL { ?memberValue time:hasEnd?/(time:inXSDDateTime|time:inXSDDate) ?memberEnd }\n                FILTER((isLiteral(?memberValue) && ?memberValue > ?colEnd) || (BOUND(?memberEnd) && ?memberEnd > ?colEnd))\n                BIND(CONCAT(STR(COALESCE(?memberEnd, ?memberValue)), \" > \", STR(?colEnd)) as ?failedValue)\n            }\n        }\n    \"\"\" ] ;\n            sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;\n            sh:sourceShape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval> ;\n            sh:value <https://example.org/data/t1> ] .\n\n",
              "isError": true,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: False\n  Results (1):\n  Constraint Violation in SPARQLConstraintComponent (http://www.w3.org/ns/shacl#SPARQLConstraintComponent):\n  \tSeverity: sh:Violation\n  \tSource Shape: <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>\n  \tFocus Node: ex:ts159c\n  \tValue Node: ex:t1\n  \tResult Path: sosa:phenomenonTime\n  \tSource Constraint: [ sh:select Literal(\"\n          PREFIX sosa: <http://www.w3.org/ns/sosa/>\n          PREFIX geojson: <https://purl.org/geojson/vocab#>\n          PREFIX time: <http://www.w3.org/2006/time#>\n          SELECT $this ?path (?member AS ?value) ?failedValue WHERE {\n              $this (sosa:hasMember|^sosa:memberOf)+ ?member ;\n                  ?path ?collectionValue .\n              ?collectionValue a time:Interval .\n              ?member ?path ?memberValue .\n              FILTER(?path in ( sosa:resultTime, sosa:phenomenonTime, sosa:hasResult, sosa:hasSimpleResult,\n                  sosa:hasFeatureOfInterest, sosa:hasUltimateFeatureOfInterest, sosa:observedProperty, sosa:madeBySystem,\n                  sosa:usedProcedure, sosa:madeBySensor, sosa:madeBySampler, sosa:isSampleOf, sosa:madeByActuator,\n                  sosa:actsOn, sosa:actsOnProperty, sosa:hasInputValue, sosa:observationRelatedTo,\n                  sosa:relatedObservation, sosa:resultQuality, sosa:isOriginalSampleOf, sosa:isResultOfMadeBySampler,\n                  sosa:isResultOfUsedProcedure ))\n  \n              {\n                  ?collectionValue time:hasBeginning/(time:inXSDDateTime|time:inXSDDate) ?colBeginning .\n                  OPTIONAL { ?memberValue time:hasBeginning?/(time:inXSDDateTime|time:inXSDDate) ?memberBeginning }\n                  FILTER((isLiteral(?memberValue) && ?memberValue < ?colBeginning) || (BOUND(?memberBeginning) && ?memberBeginning < ?colBeginning))\n                  BIND(CONCAT(STR(COALESCE(?memberBeginning, ?memberValue)), \" < \", STR(?colBeginning)) as ?failedValue)\n              } UNION {\n                  ?collectionValue time:hasEnd?/(time:inXSDDateTime|time:inXSDDate) ?colEnd .\n                  OPTIONAL { ?memberValue time:hasEnd?/(time:inXSDDateTime|time:inXSDDate) ?memberEnd }\n                  FILTER((isLiteral(?memberValue) && ?memberValue > ?colEnd) || (BOUND(?memberEnd) && ?memberEnd > ?colEnd))\n                  BIND(CONCAT(STR(COALESCE(?memberEnd, ?memberValue)), \" > \", STR(?colEnd)) as ?failedValue)\n              }\n          }\n      \") ]\n  \tMessage: Collection member values do not match those of the collections (http://www.w3.org/ns/sosa/phenomenonTime property in https://example.org/data/t1: 2017-04-16T20:00:00+00:00 > 2017-04-15T20:03:00+00:00)\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    "ex:t2/sosa:hasSimpleResult",
                    "ex:t3/sosa:hasSimpleResult",
                    "ex:t1/sosa:hasSimpleResult"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": [
                    "ex:ts159c"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": [
                    "ex:ts159c"
                  ]
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: ex:t2/sosa:hasSimpleResult,ex:t3/sosa:hasSimpleResult,ex:t1/sosa:hasSimpleResult\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: ex:ts159c\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: ex:ts159c\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/properties/observation/tests/collection-time-before-beginning-fail.ttl",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/tests/collection-time-before-beginning-fail.ttl",
        "language": "ttl"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using collection-time-before-beginning-fail.ttl from test resources"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix sosa: <http://www.w3.org/ns/sosa/> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms false ;\n    sh:result [ a sh:ValidationResult ;\n            sh:focusNode <https://example.org/data/ts159c> ;\n            sh:resultMessage \"Collection member values do not match those of the collections (http://www.w3.org/ns/sosa/phenomenonTime property in https://example.org/data/t1: 2017-04-14T20:00:00+00:00 < 2017-04-15T20:00:00+00:00)\" ;\n            sh:resultPath sosa:phenomenonTime ;\n            sh:resultSeverity sh:Violation ;\n            sh:sourceConstraint [ sh:select \"\"\"\n        PREFIX sosa: <http://www.w3.org/ns/sosa/>\n        PREFIX geojson: <https://purl.org/geojson/vocab#>\n        PREFIX time: <http://www.w3.org/2006/time#>\n        SELECT $this ?path (?member AS ?value) ?failedValue WHERE {\n            $this (sosa:hasMember|^sosa:memberOf)+ ?member ;\n                ?path ?collectionValue .\n            ?collectionValue a time:Interval .\n            ?member ?path ?memberValue .\n            FILTER(?path in ( sosa:resultTime, sosa:phenomenonTime, sosa:hasResult, sosa:hasSimpleResult,\n                sosa:hasFeatureOfInterest, sosa:hasUltimateFeatureOfInterest, sosa:observedProperty, sosa:madeBySystem,\n                sosa:usedProcedure, sosa:madeBySensor, sosa:madeBySampler, sosa:isSampleOf, sosa:madeByActuator,\n                sosa:actsOn, sosa:actsOnProperty, sosa:hasInputValue, sosa:observationRelatedTo,\n                sosa:relatedObservation, sosa:resultQuality, sosa:isOriginalSampleOf, sosa:isResultOfMadeBySampler,\n                sosa:isResultOfUsedProcedure ))\n\n            {\n                ?collectionValue time:hasBeginning/(time:inXSDDateTime|time:inXSDDate) ?colBeginning .\n                OPTIONAL { ?memberValue time:hasBeginning?/(time:inXSDDateTime|time:inXSDDate) ?memberBeginning }\n                FILTER((isLiteral(?memberValue) && ?memberValue < ?colBeginning) || (BOUND(?memberBeginning) && ?memberBeginning < ?colBeginning))\n                BIND(CONCAT(STR(COALESCE(?memberBeginning, ?memberValue)), \" < \", STR(?colBeginning)) as ?failedValue)\n            } UNION {\n                ?collectionValue time:hasEnd?/(time:inXSDDateTime|time:inXSDDate) ?colEnd .\n                OPTIONAL { ?memberValue time:hasEnd?/(time:inXSDDateTime|time:inXSDDate) ?memberEnd }\n                FILTER((isLiteral(?memberValue) && ?memberValue > ?colEnd) || (BOUND(?memberEnd) && ?memberEnd > ?colEnd))\n                BIND(CONCAT(STR(COALESCE(?memberEnd, ?memberValue)), \" > \", STR(?colEnd)) as ?failedValue)\n            }\n        }\n    \"\"\" ] ;\n            sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;\n            sh:sourceShape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval> ;\n            sh:value <https://example.org/data/t1> ] .\n\n",
              "isError": true,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: False\n  Results (1):\n  Constraint Violation in SPARQLConstraintComponent (http://www.w3.org/ns/shacl#SPARQLConstraintComponent):\n  \tSeverity: sh:Violation\n  \tSource Shape: <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>\n  \tFocus Node: ex:ts159c\n  \tValue Node: ex:t1\n  \tResult Path: sosa:phenomenonTime\n  \tSource Constraint: [ sh:select Literal(\"\n          PREFIX sosa: <http://www.w3.org/ns/sosa/>\n          PREFIX geojson: <https://purl.org/geojson/vocab#>\n          PREFIX time: <http://www.w3.org/2006/time#>\n          SELECT $this ?path (?member AS ?value) ?failedValue WHERE {\n              $this (sosa:hasMember|^sosa:memberOf)+ ?member ;\n                  ?path ?collectionValue .\n              ?collectionValue a time:Interval .\n              ?member ?path ?memberValue .\n              FILTER(?path in ( sosa:resultTime, sosa:phenomenonTime, sosa:hasResult, sosa:hasSimpleResult,\n                  sosa:hasFeatureOfInterest, sosa:hasUltimateFeatureOfInterest, sosa:observedProperty, sosa:madeBySystem,\n                  sosa:usedProcedure, sosa:madeBySensor, sosa:madeBySampler, sosa:isSampleOf, sosa:madeByActuator,\n                  sosa:actsOn, sosa:actsOnProperty, sosa:hasInputValue, sosa:observationRelatedTo,\n                  sosa:relatedObservation, sosa:resultQuality, sosa:isOriginalSampleOf, sosa:isResultOfMadeBySampler,\n                  sosa:isResultOfUsedProcedure ))\n  \n              {\n                  ?collectionValue time:hasBeginning/(time:inXSDDateTime|time:inXSDDate) ?colBeginning .\n                  OPTIONAL { ?memberValue time:hasBeginning?/(time:inXSDDateTime|time:inXSDDate) ?memberBeginning }\n                  FILTER((isLiteral(?memberValue) && ?memberValue < ?colBeginning) || (BOUND(?memberBeginning) && ?memberBeginning < ?colBeginning))\n                  BIND(CONCAT(STR(COALESCE(?memberBeginning, ?memberValue)), \" < \", STR(?colBeginning)) as ?failedValue)\n              } UNION {\n                  ?collectionValue time:hasEnd?/(time:inXSDDateTime|time:inXSDDate) ?colEnd .\n                  OPTIONAL { ?memberValue time:hasEnd?/(time:inXSDDateTime|time:inXSDDate) ?memberEnd }\n                  FILTER((isLiteral(?memberValue) && ?memberValue > ?colEnd) || (BOUND(?memberEnd) && ?memberEnd > ?colEnd))\n                  BIND(CONCAT(STR(COALESCE(?memberEnd, ?memberValue)), \" > \", STR(?colEnd)) as ?failedValue)\n              }\n          }\n      \") ]\n  \tMessage: Collection member values do not match those of the collections (http://www.w3.org/ns/sosa/phenomenonTime property in https://example.org/data/t1: 2017-04-14T20:00:00+00:00 < 2017-04-15T20:00:00+00:00)\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    "ex:t2/sosa:hasSimpleResult",
                    "ex:t3/sosa:hasSimpleResult",
                    "ex:t1/sosa:hasSimpleResult"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": [
                    "ex:ts159c"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": [
                    "ex:ts159c"
                  ]
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: ex:t2/sosa:hasSimpleResult,ex:t3/sosa:hasSimpleResult,ex:t1/sosa:hasSimpleResult\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: ex:ts159c\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: ex:ts159c\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": false,
        "filename": "_sources/properties/observation/tests/collection-times-in-interval.ttl",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/tests/collection-times-in-interval.ttl",
        "language": "ttl"
      },
      "result": true,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using collection-times-in-interval.ttl from test resources"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": [
                    "ex:t4",
                    "ex:t1",
                    "ex:t3",
                    "ex:t2"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    "ex:t2/sosa:hasSimpleResult",
                    "ex:t3/sosa:hasSimpleResult",
                    "ex:t1/sosa:hasSimpleResult"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": [
                    "ex:ts159c"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": [
                    "ex:ts159c"
                  ]
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: ex:t4,ex:t1,ex:t3,ex:t2\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: ex:t2/sosa:hasSimpleResult,ex:t3/sosa:hasSimpleResult,ex:t1/sosa:hasSimpleResult\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: ex:ts159c\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: ex:ts159c\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/properties/observation/tests/no-time-fail.ttl",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/tests/no-time-fail.ttl",
        "language": "ttl"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using no-time-fail.ttl from test resources"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix sosa: <http://www.w3.org/ns/sosa/> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms false ;\n    sh:result [ a sh:ValidationResult ;\n            sh:focusNode _:n29d2432fc0354e368ad57d8d48759644b1 ;\n            sh:resultMessage \"sosa:resultTime or sosa:phenomenonTime is required, and no more than 1 of each is allowed\" ;\n            sh:resultSeverity sh:Violation ;\n            sh:sourceConstraint [ sh:message \"sosa:resultTime or sosa:phenomenonTime is required, and no more than 1 of each is allowed\" ;\n                    sh:select \"\"\"\n            PREFIX sh: <http://www.w3.org/ns/shacl#>\n            PREFIX sosa: <http://www.w3.org/ns/sosa/>\n            PREFIX geojson: <https://purl.org/geojson/vocab#>\n            SELECT $this (CONCAT(COALESCE(COUNT(?resultTime), 0), ' x sosa:resultTime, ', COALESCE(COUNT(?phenomenonTime), 0), ' x sosa:phenomenonTime') AS ?value) WHERE {\n                OPTIONAL { $this sosa:phenomenonTime ?phenomenonTime }\n                OPTIONAL { $this sosa:resultTime ?resultTime}\n                OPTIONAL { ?collection (sosa:hasMember|geojson:features)+ $this ; sosa:phenomenonTime ?phenomenonTime }\n                OPTIONAL { ?collection (sosa:hasMember|geojson:features)+ $this ; sosa:resultTime ?resultTime }\n            }\n            GROUP BY $this\n            HAVING (count(?resultTime) > 1 || count(?phenomenonTime) > 1 || count(?resultTime) + count(?phenomenonTime) < 1)\n        \"\"\" ] ;\n            sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;\n            sh:sourceShape <https://www.ogc.org/rules/sosa/#testRequiredTime> ;\n            sh:value _:n29d2432fc0354e368ad57d8d48759644b1 ] .\n\n_:n29d2432fc0354e368ad57d8d48759644b1 a sosa:Observation ;\n    sosa:hasFeatureOfInterest [ ] ;\n    sosa:hasSimpleResult \"\" ;\n    sosa:observedProperty [ ] .\n\n",
              "isError": true,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: False\n  Results (1):\n  Constraint Violation in SPARQLConstraintComponent (http://www.w3.org/ns/shacl#SPARQLConstraintComponent):\n  \tSeverity: sh:Violation\n  \tSource Shape: <https://www.ogc.org/rules/sosa/#testRequiredTime>\n  \tFocus Node: [ rdf:type sosa:Observation ; sosa:hasFeatureOfInterest [ ] ; sosa:hasSimpleResult Literal(\"\") ; sosa:observedProperty [ ] ]\n  \tValue Node: [ rdf:type sosa:Observation ; sosa:hasFeatureOfInterest [ ] ; sosa:hasSimpleResult Literal(\"\") ; sosa:observedProperty [ ] ]\n  \tSource Constraint: [ sh:message Literal(\"sosa:resultTime or sosa:phenomenonTime is required, and no more than 1 of each is allowed\") ; sh:select Literal(\"\n              PREFIX sh: <http://www.w3.org/ns/shacl#>\n              PREFIX sosa: <http://www.w3.org/ns/sosa/>\n              PREFIX geojson: <https://purl.org/geojson/vocab#>\n              SELECT $this (CONCAT(COALESCE(COUNT(?resultTime), 0), ' x sosa:resultTime, ', COALESCE(COUNT(?phenomenonTime), 0), ' x sosa:phenomenonTime') AS ?value) WHERE {\n                  OPTIONAL { $this sosa:phenomenonTime ?phenomenonTime }\n                  OPTIONAL { $this sosa:resultTime ?resultTime}\n                  OPTIONAL { ?collection (sosa:hasMember|geojson:features)+ $this ; sosa:phenomenonTime ?phenomenonTime }\n                  OPTIONAL { ?collection (sosa:hasMember|geojson:features)+ $this ; sosa:resultTime ?resultTime }\n              }\n              GROUP BY $this\n              HAVING (count(?resultTime) > 1 || count(?phenomenonTime) > 1 || count(?resultTime) + count(?phenomenonTime) < 1)\n          \") ]\n  \tMessage: sosa:resultTime or sosa:phenomenonTime is required, and no more than 1 of each is allowed\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": [
                    "_:n29d2432fc0354e368ad57d8d48759644b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": [
                    "_:n29d2432fc0354e368ad57d8d48759644b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": [
                    "_:n29d2432fc0354e368ad57d8d48759644b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": [
                    "_:n29d2432fc0354e368ad57d8d48759644b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    ""
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: _:n29d2432fc0354e368ad57d8d48759644b1\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: _:n29d2432fc0354e368ad57d8d48759644b1\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: _:n29d2432fc0354e368ad57d8d48759644b1\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: _:n29d2432fc0354e368ad57d8d48759644b1\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: \n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: *none*\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/properties/observation/tests/non-simpleresult-fail.jsonld",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/tests/non-simpleresult-fail.jsonld",
        "language": "jsonld"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using non-simpleresult-fail.jsonld from test resources"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "non-simpleresult-fail.ttl",
              "size": 4,
              "isError": false,
              "message": "Output Turtle non-simpleresult-fail.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms false ;\n    sh:result [ a sh:ValidationResult ;\n            sh:focusNode _:N05ebaa6684e74c6dbce09511a766a1b0 ;\n            sh:resultMessage \"sosa:hasSimpleResult is a simple Literal\" ;\n            sh:resultSeverity sh:Violation ;\n            sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;\n            sh:sourceShape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral> ;\n            sh:value _:N05ebaa6684e74c6dbce09511a766a1b0 ] .\n\n",
              "isError": true,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: False\n  Results (1):\n  Constraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n  \tSeverity: sh:Violation\n  \tSource Shape: <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>\n  \tFocus Node: [ ]\n  \tValue Node: [ ]\n  \tMessage: sosa:hasSimpleResult is a simple Literal\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    "_:N05ebaa6684e74c6dbce09511a766a1b0"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: _:N05ebaa6684e74c6dbce09511a766a1b0\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: *none*\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/properties/observation/tests/observedprop-fail.jsonld",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/tests/observedprop-fail.jsonld",
        "language": "jsonld"
      },
      "result": false,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": true,
              "message": "Test was expected to fail but it did not."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using observedprop-fail.jsonld from test resources"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "observedprop-fail.ttl",
              "size": 4,
              "isError": false,
              "message": "Output Turtle observedprop-fail.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: *none*\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/properties/observation/tests/phenomenon-time-2-fail.ttl",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/tests/phenomenon-time-2-fail.ttl",
        "language": "ttl"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using phenomenon-time-2-fail.ttl from test resources"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix sosa: <http://www.w3.org/ns/sosa/> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms false ;\n    sh:result [ a sh:ValidationResult ;\n            sh:focusNode _:n6d65ba211fa940e1b6de3b0ac1951c8eb1 ;\n            sh:resultMessage \"sosa:resultTime or sosa:phenomenonTime is required, and no more than 1 of each is allowed\" ;\n            sh:resultSeverity sh:Violation ;\n            sh:sourceConstraint [ sh:message \"sosa:resultTime or sosa:phenomenonTime is required, and no more than 1 of each is allowed\" ;\n                    sh:select \"\"\"\n            PREFIX sh: <http://www.w3.org/ns/shacl#>\n            PREFIX sosa: <http://www.w3.org/ns/sosa/>\n            PREFIX geojson: <https://purl.org/geojson/vocab#>\n            SELECT $this (CONCAT(COALESCE(COUNT(?resultTime), 0), ' x sosa:resultTime, ', COALESCE(COUNT(?phenomenonTime), 0), ' x sosa:phenomenonTime') AS ?value) WHERE {\n                OPTIONAL { $this sosa:phenomenonTime ?phenomenonTime }\n                OPTIONAL { $this sosa:resultTime ?resultTime}\n                OPTIONAL { ?collection (sosa:hasMember|geojson:features)+ $this ; sosa:phenomenonTime ?phenomenonTime }\n                OPTIONAL { ?collection (sosa:hasMember|geojson:features)+ $this ; sosa:resultTime ?resultTime }\n            }\n            GROUP BY $this\n            HAVING (count(?resultTime) > 1 || count(?phenomenonTime) > 1 || count(?resultTime) + count(?phenomenonTime) < 1)\n        \"\"\" ] ;\n            sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;\n            sh:sourceShape <https://www.ogc.org/rules/sosa/#testRequiredTime> ;\n            sh:value _:n6d65ba211fa940e1b6de3b0ac1951c8eb1 ] .\n\n_:n6d65ba211fa940e1b6de3b0ac1951c8eb1 a sosa:Observation ;\n    sosa:hasFeatureOfInterest [ ] ;\n    sosa:hasSimpleResult \"\" ;\n    sosa:observedProperty [ ] ;\n    sosa:phenomenonTime \"2025-01-01T00:00:00+00:00\"^^xsd:dateTime,\n        \"2025-01-02T00:00:00+00:00\"^^xsd:dateTime .\n\n",
              "isError": true,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: False\n  Results (1):\n  Constraint Violation in SPARQLConstraintComponent (http://www.w3.org/ns/shacl#SPARQLConstraintComponent):\n  \tSeverity: sh:Violation\n  \tSource Shape: <https://www.ogc.org/rules/sosa/#testRequiredTime>\n  \tFocus Node: [ rdf:type sosa:Observation ; sosa:hasFeatureOfInterest [ ] ; sosa:hasSimpleResult Literal(\"\") ; sosa:observedProperty [ ] ; sosa:phenomenonTime Literal(\"2025-01-01T00:00:00+00:00\" = 2025-01-01 00:00:00+00:00, datatype=xsd:dateTime), Literal(\"2025-01-02T00:00:00+00:00\" = 2025-01-02 00:00:00+00:00, datatype=xsd:dateTime) ]\n  \tValue Node: [ rdf:type sosa:Observation ; sosa:hasFeatureOfInterest [ ] ; sosa:hasSimpleResult Literal(\"\") ; sosa:observedProperty [ ] ; sosa:phenomenonTime Literal(\"2025-01-01T00:00:00+00:00\" = 2025-01-01 00:00:00+00:00, datatype=xsd:dateTime), Literal(\"2025-01-02T00:00:00+00:00\" = 2025-01-02 00:00:00+00:00, datatype=xsd:dateTime) ]\n  \tSource Constraint: [ sh:message Literal(\"sosa:resultTime or sosa:phenomenonTime is required, and no more than 1 of each is allowed\") ; sh:select Literal(\"\n              PREFIX sh: <http://www.w3.org/ns/shacl#>\n              PREFIX sosa: <http://www.w3.org/ns/sosa/>\n              PREFIX geojson: <https://purl.org/geojson/vocab#>\n              SELECT $this (CONCAT(COALESCE(COUNT(?resultTime), 0), ' x sosa:resultTime, ', COALESCE(COUNT(?phenomenonTime), 0), ' x sosa:phenomenonTime') AS ?value) WHERE {\n                  OPTIONAL { $this sosa:phenomenonTime ?phenomenonTime }\n                  OPTIONAL { $this sosa:resultTime ?resultTime}\n                  OPTIONAL { ?collection (sosa:hasMember|geojson:features)+ $this ; sosa:phenomenonTime ?phenomenonTime }\n                  OPTIONAL { ?collection (sosa:hasMember|geojson:features)+ $this ; sosa:resultTime ?resultTime }\n              }\n              GROUP BY $this\n              HAVING (count(?resultTime) > 1 || count(?phenomenonTime) > 1 || count(?resultTime) + count(?phenomenonTime) < 1)\n          \") ]\n  \tMessage: sosa:resultTime or sosa:phenomenonTime is required, and no more than 1 of each is allowed\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": [
                    "_:n6d65ba211fa940e1b6de3b0ac1951c8eb1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": [
                    "_:n6d65ba211fa940e1b6de3b0ac1951c8eb1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": [
                    "_:n6d65ba211fa940e1b6de3b0ac1951c8eb1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": [
                    "_:n6d65ba211fa940e1b6de3b0ac1951c8eb1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    ""
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: _:n6d65ba211fa940e1b6de3b0ac1951c8eb1\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: _:n6d65ba211fa940e1b6de3b0ac1951c8eb1\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: _:n6d65ba211fa940e1b6de3b0ac1951c8eb1\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: _:n6d65ba211fa940e1b6de3b0ac1951c8eb1\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: \n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: *none*\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": false,
        "filename": "_sources/properties/observation/tests/result-phenomenon-time.ttl",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/tests/result-phenomenon-time.ttl",
        "language": "ttl"
      },
      "result": true,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using result-phenomenon-time.ttl from test resources"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": [
                    "_:n95cfe2d5314441abaaf674a036a3a729b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": [
                    "_:n95cfe2d5314441abaaf674a036a3a729b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": [
                    "_:n95cfe2d5314441abaaf674a036a3a729b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": [
                    "_:n95cfe2d5314441abaaf674a036a3a729b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    ""
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: _:n95cfe2d5314441abaaf674a036a3a729b1\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: _:n95cfe2d5314441abaaf674a036a3a729b1\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: _:n95cfe2d5314441abaaf674a036a3a729b1\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: _:n95cfe2d5314441abaaf674a036a3a729b1\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: \n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: *none*\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/properties/observation/tests/result-time-2-fail.ttl",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/tests/result-time-2-fail.ttl",
        "language": "ttl"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using result-time-2-fail.ttl from test resources"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix sosa: <http://www.w3.org/ns/sosa/> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms false ;\n    sh:result [ a sh:ValidationResult ;\n            sh:focusNode _:ne9a9e981c3dc4903880d7692b437c54fb1 ;\n            sh:resultMessage \"sosa:resultTime or sosa:phenomenonTime is required, and no more than 1 of each is allowed\" ;\n            sh:resultSeverity sh:Violation ;\n            sh:sourceConstraint [ sh:message \"sosa:resultTime or sosa:phenomenonTime is required, and no more than 1 of each is allowed\" ;\n                    sh:select \"\"\"\n            PREFIX sh: <http://www.w3.org/ns/shacl#>\n            PREFIX sosa: <http://www.w3.org/ns/sosa/>\n            PREFIX geojson: <https://purl.org/geojson/vocab#>\n            SELECT $this (CONCAT(COALESCE(COUNT(?resultTime), 0), ' x sosa:resultTime, ', COALESCE(COUNT(?phenomenonTime), 0), ' x sosa:phenomenonTime') AS ?value) WHERE {\n                OPTIONAL { $this sosa:phenomenonTime ?phenomenonTime }\n                OPTIONAL { $this sosa:resultTime ?resultTime}\n                OPTIONAL { ?collection (sosa:hasMember|geojson:features)+ $this ; sosa:phenomenonTime ?phenomenonTime }\n                OPTIONAL { ?collection (sosa:hasMember|geojson:features)+ $this ; sosa:resultTime ?resultTime }\n            }\n            GROUP BY $this\n            HAVING (count(?resultTime) > 1 || count(?phenomenonTime) > 1 || count(?resultTime) + count(?phenomenonTime) < 1)\n        \"\"\" ] ;\n            sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;\n            sh:sourceShape <https://www.ogc.org/rules/sosa/#testRequiredTime> ;\n            sh:value _:ne9a9e981c3dc4903880d7692b437c54fb1 ] .\n\n_:ne9a9e981c3dc4903880d7692b437c54fb1 a sosa:Observation ;\n    sosa:hasFeatureOfInterest [ ] ;\n    sosa:hasSimpleResult \"\" ;\n    sosa:observedProperty [ ] ;\n    sosa:phenomenonTime \"2024-12-31T00:00:00+00:00\"^^xsd:dateTime ;\n    sosa:resultTime \"2025-01-01T00:00:00+00:00\"^^xsd:dateTime,\n        \"2025-01-02T00:00:00+00:00\"^^xsd:dateTime .\n\n",
              "isError": true,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: False\n  Results (1):\n  Constraint Violation in SPARQLConstraintComponent (http://www.w3.org/ns/shacl#SPARQLConstraintComponent):\n  \tSeverity: sh:Violation\n  \tSource Shape: <https://www.ogc.org/rules/sosa/#testRequiredTime>\n  \tFocus Node: [ rdf:type sosa:Observation ; sosa:hasFeatureOfInterest [ ] ; sosa:hasSimpleResult Literal(\"\") ; sosa:observedProperty [ ] ; sosa:phenomenonTime Literal(\"2024-12-31T00:00:00+00:00\" = 2024-12-31 00:00:00+00:00, datatype=xsd:dateTime) ; sosa:resultTime Literal(\"2025-01-01T00:00:00+00:00\" = 2025-01-01 00:00:00+00:00, datatype=xsd:dateTime), Literal(\"2025-01-02T00:00:00+00:00\" = 2025-01-02 00:00:00+00:00, datatype=xsd:dateTime) ]\n  \tValue Node: [ rdf:type sosa:Observation ; sosa:hasFeatureOfInterest [ ] ; sosa:hasSimpleResult Literal(\"\") ; sosa:observedProperty [ ] ; sosa:phenomenonTime Literal(\"2024-12-31T00:00:00+00:00\" = 2024-12-31 00:00:00+00:00, datatype=xsd:dateTime) ; sosa:resultTime Literal(\"2025-01-01T00:00:00+00:00\" = 2025-01-01 00:00:00+00:00, datatype=xsd:dateTime), Literal(\"2025-01-02T00:00:00+00:00\" = 2025-01-02 00:00:00+00:00, datatype=xsd:dateTime) ]\n  \tSource Constraint: [ sh:message Literal(\"sosa:resultTime or sosa:phenomenonTime is required, and no more than 1 of each is allowed\") ; sh:select Literal(\"\n              PREFIX sh: <http://www.w3.org/ns/shacl#>\n              PREFIX sosa: <http://www.w3.org/ns/sosa/>\n              PREFIX geojson: <https://purl.org/geojson/vocab#>\n              SELECT $this (CONCAT(COALESCE(COUNT(?resultTime), 0), ' x sosa:resultTime, ', COALESCE(COUNT(?phenomenonTime), 0), ' x sosa:phenomenonTime') AS ?value) WHERE {\n                  OPTIONAL { $this sosa:phenomenonTime ?phenomenonTime }\n                  OPTIONAL { $this sosa:resultTime ?resultTime}\n                  OPTIONAL { ?collection (sosa:hasMember|geojson:features)+ $this ; sosa:phenomenonTime ?phenomenonTime }\n                  OPTIONAL { ?collection (sosa:hasMember|geojson:features)+ $this ; sosa:resultTime ?resultTime }\n              }\n              GROUP BY $this\n              HAVING (count(?resultTime) > 1 || count(?phenomenonTime) > 1 || count(?resultTime) + count(?phenomenonTime) < 1)\n          \") ]\n  \tMessage: sosa:resultTime or sosa:phenomenonTime is required, and no more than 1 of each is allowed\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": [
                    "_:ne9a9e981c3dc4903880d7692b437c54fb1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": [
                    "_:ne9a9e981c3dc4903880d7692b437c54fb1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": [
                    "_:ne9a9e981c3dc4903880d7692b437c54fb1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": [
                    "_:ne9a9e981c3dc4903880d7692b437c54fb1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    ""
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: _:ne9a9e981c3dc4903880d7692b437c54fb1\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: _:ne9a9e981c3dc4903880d7692b437c54fb1\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: _:ne9a9e981c3dc4903880d7692b437c54fb1\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: _:ne9a9e981c3dc4903880d7692b437c54fb1\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: \n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: *none*\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": false,
        "filename": "_sources/properties/observation/tests/result-time.ttl",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/tests/result-time.ttl",
        "language": "ttl"
      },
      "result": true,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using result-time.ttl from test resources"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": [
                    "_:n646202240fbf405c9af8804d4acb3352b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": [
                    "_:n646202240fbf405c9af8804d4acb3352b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": [
                    "_:n646202240fbf405c9af8804d4acb3352b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": [
                    "_:n646202240fbf405c9af8804d4acb3352b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    ""
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: _:n646202240fbf405c9af8804d4acb3352b1\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: _:n646202240fbf405c9af8804d4acb3352b1\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: _:n646202240fbf405c9af8804d4acb3352b1\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: _:n646202240fbf405c9af8804d4acb3352b1\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: \n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: *none*\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/properties/observation/tests/tworesults-fail.jsonld",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/tests/tworesults-fail.jsonld",
        "language": "jsonld"
      },
      "result": false,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": true,
              "message": "Test was expected to fail but it did not."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using tworesults-fail.jsonld from test resources"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "tworesults-fail.ttl",
              "size": 8,
              "isError": false,
              "message": "Output Turtle tworesults-fail.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    "frogginess"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: frogginess\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: *none*\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/sosa/properties/observation/example_1_1.json",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/build/tests/sosa/properties/observation/example_1_1.json",
        "exampleIndex": 1,
        "snippetIndex": 1,
        "language": "application/json"
      },
      "result": true,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_1_1.json from examples"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "example_1_1.jsonld",
              "isError": false,
              "message": "Output JSON-LD example_1_1.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_1_1.ttl",
              "size": 4,
              "isError": false,
              "message": "Output Turtle example_1_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    "33"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: 33\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: *none*\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/sosa/properties/observation/example_1_2.ttl",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/build/tests/sosa/properties/observation/example_1_2.ttl",
        "exampleIndex": 1,
        "snippetIndex": 2,
        "language": "text/turtle"
      },
      "result": true,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_1_2.ttl from examples"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_1_2.ttl",
              "size": 5,
              "isError": false,
              "message": "Output Turtle example_1_2.ttl created"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": [
                    "_:n36dedf1476a2451ab83ec415a660d246b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": [
                    "_:n36dedf1476a2451ab83ec415a660d246b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": [
                    "_:n36dedf1476a2451ab83ec415a660d246b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": [
                    "_:n36dedf1476a2451ab83ec415a660d246b1"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": [
                    "33"
                  ]
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: _:n36dedf1476a2451ab83ec415a660d246b1\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: _:n36dedf1476a2451ab83ec415a660d246b1\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: _:n36dedf1476a2451ab83ec415a660d246b1\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: _:n36dedf1476a2451ab83ec415a660d246b1\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: 33\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: *none*\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/sosa/properties/observation/example_2_1.json",
        "url": "https://opengeospatial.github.io/ogcapi-sosa/build/tests/sosa/properties/observation/example_2_1.json",
        "exampleIndex": 2,
        "snippetIndex": 1,
        "language": "application/json"
      },
      "result": true,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_2_1.json from examples"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "example_2_1.jsonld",
              "isError": false,
              "message": "Output JSON-LD example_2_1.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_2_1.ttl",
              "size": 5,
              "isError": false,
              "message": "Output Turtle example_2_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/observation/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/observation/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/sosa/#testResult>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testFeatureOfInterest>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testObservedProperty>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testRequiredTime>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>": {
                  "nodes": []
                },
                "<https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/observation/rules.shacl:\n - Shape <https://www.ogc.org/rules/sosa/#testResult>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testResultNotEmptyNode>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testFeatureOfInterest>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testObservedProperty>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testRequiredTime>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testSimpleResultLiteral>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValuesInterval>: *none*\n - Shape <https://www.ogc.org/rules/sosa/#testCollectionPropertyValues>: *none*\n"
            }
          ]
        }
      ]
    }
  ],
  "globalErrors": {},
  "counts": {
    "total": 15,
    "passed": 13,
    "failed": 2
  }
}